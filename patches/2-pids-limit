diff --git a/agent/engine/docker_task_engine.go b/agent/engine/docker_task_engine.go
index 612232d8..c3e1663e 100644
--- a/agent/engine/docker_task_engine.go
+++ b/agent/engine/docker_task_engine.go
@@ -1212,6 +1212,13 @@ func (engine *DockerTaskEngine) createContainer(task *apitask.Task, container *a
 		return dockerapi.DockerContainerMetadata{Error: apierrors.NamedError(err)}
 	}
 
+	// docker run supports a --pids-limit flag, which replaces the nproc
+	// limit with a container aware version. In almost all circumstances,
+	// noproc should not be used, since it's global.
+	//
+	// See https://github.com/moby/moby/pull/18697
+	coercePidsLimit(hostConfig)
+
 	// Augment labels with some metadata from the agent. Explicitly do this last
 	// such that it will always override duplicates in the provided raw config
 	// data.
@@ -1743,6 +1750,23 @@ func (engine *DockerTaskEngine) updateMetadataFile(task *apitask.Task, cont *api
 	}
 }
 
+func coercePidsLimit(config *dockercontainer.HostConfig) {
+	idx := -1
+	for i, l := range config.Ulimits {
+		if l.Name == "nproc" {
+			idx = i
+			break
+		}
+	}
+
+	if idx < 0 {
+		return
+	}
+
+	config.PidsLimit = &config.Ulimits[idx].Soft
+	config.Ulimits = append(config.Ulimits[:idx], config.Ulimits[idx+1:]...)
+}
+
 func getContainerHostIP(networkSettings *types.NetworkSettings) (string, bool) {
 	if networkSettings == nil {
 		return "", false
diff --git a/agent/engine/docker_task_engine_test.go b/agent/engine/docker_task_engine_test.go
index bee53d83..f0da36c4 100644
--- a/agent/engine/docker_task_engine_test.go
+++ b/agent/engine/docker_task_engine_test.go
@@ -74,6 +74,8 @@ import (
 	"github.com/pborman/uuid"
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
+
+	"github.com/docker/go-units"
 )
 
 const (
@@ -3585,3 +3587,33 @@ func TestCreateContainerWithExecAgent(t *testing.T) {
 		})
 	}
 }
+
+func TestCoercePidsLimit(t *testing.T) {
+	config := &dockercontainer.HostConfig{
+		Resources: dockercontainer.Resources{
+			Ulimits: []*units.Ulimit{
+				{Name: "nproc", Soft: 90, Hard: 90},
+			},
+		},
+	}
+
+	coercePidsLimit(config)
+	assert.Equal(t, int64(90), *config.PidsLimit)
+	assert.Equal(t, 0, len(config.Ulimits))
+	assert.Equal(t, []*units.Ulimit{}, config.Ulimits)
+
+	nofile := &units.Ulimit{Name: "nofile", Soft: 100, Hard: 100}
+	config = &dockercontainer.HostConfig{
+		Resources: dockercontainer.Resources{
+			Ulimits: []*units.Ulimit{
+				nofile,
+				{Name: "nproc", Soft: 90, Hard: 90},
+			},
+		},
+	}
+
+	coercePidsLimit(config)
+	assert.Equal(t, int64(90), *config.PidsLimit)
+	assert.Equal(t, 1, len(config.Ulimits))
+	assert.Equal(t, []*units.Ulimit{nofile}, config.Ulimits)
+}
